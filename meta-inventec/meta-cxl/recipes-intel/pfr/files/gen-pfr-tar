#!/bin/bash
set -eo pipefail

help=$'Generate Tarball with Bios image and MANIFEST Script

Generates a Bios image tarball from given file as input.
Creates a MANIFEST for image verification and recreation
Packages the image and MANIFEST together in a tarball

usage: gen-bios-tar [OPTION] <Bios FILE>...

Options:
   -o, --out <file>       Specify destination file. Defaults to
                          `pwd`/image-bmc-stg.tar if unspecified.
   -m, --machine <name>   Optionally specify the target machine name of this
                          image.
   -v, --version <name>   Specify the version of bios image file
   -h, --help             Display this help text and exit.
'

private_key_path=""
outfile=""
machine=""
version=""

while [[ $# -gt 0 ]]; do
  key="$1"
  case $key in
    -o|--out)
      outfile="$2"
      shift 2
      ;;
    -m|--machine)
      machine="$2"
      shift 2
      ;;
    -v|--version)
      version="$2"
      shift 2
      ;;
    -h|--help)
      echo "$help"
      exit
      ;;
    -*)
      echo "Unrecognised option $1"
      echo "$help"
      exit
      ;;
    *)
      file="$1"
      shift 1
      ;;
  esac
done

if [ ! -f "${file}" ]; then
  echo "${file} not found, Please enter a valid BMC image file"
  echo "$help"
  exit 1
fi

if [[ -z $version ]]; then
  echo "Please provide version of image with -v option"
  exit 1
fi

if [[ -z $outfile ]]; then
  outfile=`pwd`/image-bmc-stg.tar
else
  if [[ $outfile != /* ]]; then
    outfile=`pwd`/$outfile
  fi
fi

manifest_location="MANIFEST"
files_to_sign="$manifest_location"
scratch_dir=`mktemp -d`
# Go to scratch_dir
cp ${file} ${scratch_dir}
cd "${scratch_dir}"
files_to_sign+=" $(basename ${file})"

echo "Creating MANIFEST for the image"
echo -e "purpose=xyz.openbmc_project.Software.Version.VersionPurpose.PFRBMC\n\
version=$version" > $manifest_location

if [[ ! -z "${machine}" ]]; then
    echo -e "MachineName=${machine}" >> $manifest_location
fi

tar -czvf $outfile $files_to_sign
echo "BMC signed image tarball is at $outfile"
