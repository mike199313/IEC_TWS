From f847d797aa421afc3d30141c03c243c471bf3685 Mon Sep 17 00:00:00 2001
From: Jammy Huang <jammy_huang@aspeedtech.com>
Date: Fri, 11 Nov 2022 15:07:08 +0800
Subject: [PATCH] misc: dp: Fix dp display turn black for a sudden if BMC
 reboot

In previous commit, skipping reset is not enough. we skip all operations
to mcu here if mcu running.

Fixes: f7347bb73 (misc: dp: Fix dp display turn black for a sudden if BMC)

Signed-off-by: Jammy Huang <jammy_huang@aspeedtech.com>
Change-Id: Iafc40796674bba5537fb3a7db6b861c6132d7915
---
 drivers/misc/aspeed_dp.c | 44 +++++++++++++++++++++++-----------------
 1 file changed, 25 insertions(+), 19 deletions(-)

diff --git a/drivers/misc/aspeed_dp.c b/drivers/misc/aspeed_dp.c
index d734be07d7..7076ff0847 100644
--- a/drivers/misc/aspeed_dp.c
+++ b/drivers/misc/aspeed_dp.c
@@ -45,6 +45,7 @@ static int aspeed_dp_probe(struct udevice *dev)
 	int i, ret = 0, len;
 	const u32 *cell;
 	u32 tmp, mcu_ctrl;
+	bool is_mcu_stop = ((readl(0x1e6e2100) & BIT(13)) == 0);
 
 	/* Get the controller base address */
 	dp->ctrl_base = (void *)devfdt_get_addr_index(dev, 0);
@@ -64,7 +65,7 @@ static int aspeed_dp_probe(struct udevice *dev)
 	}
 
 	/* reset for DPTX and DPMCU if MCU isn't running */
-	if ((readl(0x1e6e2100) & BIT(13)) == 0) {
+	if (is_mcu_stop) {
 		reset_assert(&dp_reset_ctl);
 		reset_assert(&dpmcu_reset_ctrl);
 		reset_deassert(&dp_reset_ctl);
@@ -80,21 +81,23 @@ static int aspeed_dp_probe(struct udevice *dev)
 	writel(0, 0x18000de0);
 	
 	/* load DPMCU firmware to internal instruction memory */
-	mcu_ctrl = MCU_CTRL_CONFIG | MCU_CTRL_IMEM_CLK_OFF | MCU_CTRL_IMEM_SHUT_DOWN |
-	      MCU_CTRL_DMEM_CLK_OFF | MCU_CTRL_DMEM_SHUT_DOWN | MCU_CTRL_AHBS_SW_RST;
-	writel(mcu_ctrl, MCU_CTRL);
+	if (is_mcu_stop) {
+		mcu_ctrl = MCU_CTRL_CONFIG | MCU_CTRL_IMEM_CLK_OFF | MCU_CTRL_IMEM_SHUT_DOWN |
+		      MCU_CTRL_DMEM_CLK_OFF | MCU_CTRL_DMEM_SHUT_DOWN | MCU_CTRL_AHBS_SW_RST;
+		writel(mcu_ctrl, MCU_CTRL);
 
-	mcu_ctrl &= ~(MCU_CTRL_IMEM_SHUT_DOWN | MCU_CTRL_DMEM_SHUT_DOWN);
-	writel(mcu_ctrl, MCU_CTRL);
+		mcu_ctrl &= ~(MCU_CTRL_IMEM_SHUT_DOWN | MCU_CTRL_DMEM_SHUT_DOWN);
+		writel(mcu_ctrl, MCU_CTRL);
 
-	mcu_ctrl &= ~(MCU_CTRL_IMEM_CLK_OFF | MCU_CTRL_DMEM_CLK_OFF);
-	writel(mcu_ctrl, MCU_CTRL);
+		mcu_ctrl &= ~(MCU_CTRL_IMEM_CLK_OFF | MCU_CTRL_DMEM_CLK_OFF);
+		writel(mcu_ctrl, MCU_CTRL);
 
-	mcu_ctrl |= MCU_CTRL_AHBS_IMEM_EN;
-	writel(mcu_ctrl, MCU_CTRL);
+		mcu_ctrl |= MCU_CTRL_AHBS_IMEM_EN;
+		writel(mcu_ctrl, MCU_CTRL);
 
-	for (i = 0; i < ARRAY_SIZE(firmware_ast2600_dp); i++)
-		writel(firmware_ast2600_dp[i], MCU_IMEM_START + (i * 4));
+		for (i = 0; i < ARRAY_SIZE(firmware_ast2600_dp); i++)
+			writel(firmware_ast2600_dp[i], MCU_IMEM_START + (i * 4));
+	}
 
 	// update configs to dmem for re-driver
 	writel(0x0000dead, 0x18000e00);	// mark re-driver cfg not ready
@@ -128,13 +131,16 @@ static int aspeed_dp_probe(struct udevice *dev)
 	writel(0x0000cafe, 0x18000e00);	// mark re-driver cfg ready
 
 ERR_DTS:
-	/* release DPMCU internal reset */
-	mcu_ctrl &= ~MCU_CTRL_AHBS_IMEM_EN;
-	writel(mcu_ctrl, MCU_CTRL);
-	mcu_ctrl |= MCU_CTRL_CORE_SW_RST | MCU_CTRL_AHBM_SW_RST;
-	writel(mcu_ctrl, MCU_CTRL);
-	//disable dp interrupt
-	writel(FIELD_PREP(MCU_INTR_CTRL_EN, 0xff), MCU_INTR_CTRL);
+	if (is_mcu_stop) {
+		/* release DPMCU internal reset */
+		mcu_ctrl &= ~MCU_CTRL_AHBS_IMEM_EN;
+		writel(mcu_ctrl, MCU_CTRL);
+		mcu_ctrl |= MCU_CTRL_CORE_SW_RST | MCU_CTRL_AHBM_SW_RST;
+		writel(mcu_ctrl, MCU_CTRL);
+		//disable dp interrupt
+		writel(FIELD_PREP(MCU_INTR_CTRL_EN, 0xff), MCU_INTR_CTRL);
+	}
+
 	//set vga ASTDP with DPMCU FW handling scratch
 	writel(readl(0x1e6e2100) | (0x7 << 9), 0x1e6e2100);	
 
